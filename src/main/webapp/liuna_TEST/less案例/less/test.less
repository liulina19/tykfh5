@charset"utf-8";
/*此处注释能被编译*/
//这样的注释是不被编译的
//变量
//  less中定义变量
//less中想声明变量的话一定要用 @ 开头    例如：@变量名：值;  例 @test_width:300px;
//示例
@test_width:300px;
.box{
  width: @test_width;
  height:@test_width;
  background-color:yellow;
  .border
}

//混合

.border{
  border:solid 5px pink;
}

.border_2{
  .border;
  margin-left:100px;
}

//混合   可带参数
.border_02(@border_width){
  border:solid yellow @border_width;
}
.test_hunhe{
  .border_02(30px);
}
//混合   默认带值
.border_03(@border_width:10px){
  border:solid green @border_width;
}

.test_hunhe_03{
  .border_03();
}
.test_hunhe_04{
  .border_03(50px);
}

//混合例子
.border_radius(@radius:5px){
  -webkit-border-radius:@radius;
  -moz-border-radius:@radius;
  border-radius:@radius;
}
.radius_test{
  width:100px;
  height: 40px;
  .border_radius();
}
.radius_test_01{
  width:100px;
  height: 40px;
  .border_radius(10px);
}

//匹配模式
.sanjiao_css_xiefa{
  width:0px;
  height: 0px;
  overflow: hidden;
  border-width: 10px;
  border-color:transparent transparent red transparent;
  border-style: dashed dashed solid dashed;//解决IE6里面背景是黑色
}
.triangle(top,@w:5px,@c:#ccc){
  border-width: @w;
  border-color:transparent transparent @c transparent;
  border-style: dashed dashed solid dashed;
}
.triangle(bottom,@w:5px,@c:#ccc){
  border-width: @w;
  border-color:@c transparent transparent transparent;
  border-style:solid dashed dashed dashed;
}
.triangle(left,@w:5px,@c:#ccc){
  border-width: @w;
  border-color:transparent @c transparent transparent;
  border-style:dashed solid dashed dashed;
}
.triangle(right,@w:5px,@c:#ccc){
  border-width: @w;
  border-color:transparent transparent transparent @c;
  border-style:dashed dashed dashed solid;
}
//必须要写这个  @_必须要带
.triangle(@_,@w:5px,@c:#ccc){
  width:0px;
  height: 0px;
  overflow: hidden;
}

.sanjiao{
  .triangle(top);
}
.sanjiao_2{
  .triangle(top,100px);
}

//匹配模式   -定位
.pos(r){
  position: relative;
}
.pos(a){
  position: absolute;
}
.pos(f){
  position: fixed;
}
.pipei{
  width: 100px;
  height: 100px;
  background-color: green;
  .pos(f);
}

@test_01:300px;
.box_02{
  width:@test_01+20;//less里面只要有一个带PX就行了，   此处还可以写成 width:@test_01-20 或 width:@test_01/20 或  width:(@test_01-20)*5
  color:#ccc - 10;
}

//嵌套
/*
<ul class="list">
  <li><a href="">这里是个嵌套</a><span>2017-8-15</span></li>
  <li><a href="">这里是个嵌套</a><span>2017-8-15</span></li>
  <li><a href="">这里是个嵌套</a><span>2017-8-15</span></li>
</ul>

传统写法：
.list{}
.list li{}
.list a{}
.list span{}
*/

//less写法
.list{
  width: 600px;
  margin: 30px auto;
  padding: 0px;
  list-style: none;

  li{
    height: 30px;
    line-height: 30px;
    background-color: #0a6aac;
    margin-bottom: 5px;
  }
  a{
    colo:#000;//它代表li a{}
    &:hover{//代表a:hover
      color:red;
    }
  }
  &:hover{//代表list:hover
    color:blue;
  }
  span{
      float:right;//它代表li span{}
  }
}

//arguments
.boder_arg(@w:30px,@c:red,@xianxing:solid){
    border:@arguments;//代表：border:@w:30px,@c:red,@xianxing:solid;
}

.test_arguments{
  .boder_arg(40px);
}


//避免编译
.test_03{
  // width:calc (300px-30px); 这样写会直接被计算出来，但我的目的是被浏览器计算出来。所以要写成以下
  width:~'calc(300px-30px)';
}

//!important关键字   会为所有混合所带来的样式，添加上!important
.test_important{
  .border_03()!important;
}
